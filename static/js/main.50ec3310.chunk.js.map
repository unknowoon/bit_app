{"version":3,"sources":["components/coinName.js","components/Chart.js","routes/Loading.js","components/Searchbar.js","routes/coinChart.js","routes/Home.js","App.js","index.js"],"names":["coinNameKR","BTC","ETH","ADA","DOGE","XRP","DOT","BCH","UNI","LTC","LINK","XLM","ETC","VET","THETA","TRX","EOS","AAVE","MKR","KLAY","BSV","XTZ","ALGO","CRO","ATOM","LUNA","BTT","COMP","WAVES","XEM","SNX","YFI","CHZ","TFUEL","SUSHI","ZIL","MANA","BAT","GRT","BTG","ENJ","QTUM","ONT","OMG","UMA","ZRX","ANKR","ICX","BCD","ORC","IOST","RLC","LRC","ELF","KNC","GLM","WAXP","POWR","STRAX","REP","CTXC","WTC","LOOM","TRUE","RNT","MTL","TMTG","STEEM","PCM","AE","QKC","HDAC","AMO","DAC","ORBS","VALOR","CON","MIX","LAMB","FX","CHR","MBL","MXC","DVP","FCT","FNB","TRV","DAD","AOA","WOM","SOC","EM","QBZ","BOA","FLETA","SXP","COS","APIX","EL","BASIC","HIVE","XPR","FIT","EGG","BORA","ARPA","APM","CKB","AERGO","ANW","CENNZ","EVZ","MCI","SRM","QTCON","SAND","CVT","LPT","LF","BURGER","useStyles","makeStyles","theme","seeMore","marginTop","spacing","Chart","data","Fragment","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","map","name","Price","p","premium","gap","premiumGap","className","key","Copyright","Typography","variant","color","Link","href","Date","getFullYear","root","display","flexDirection","minHeight","main","marginBottom","footer","padding","backgroundColor","palette","type","grey","Loading","classes","CssBaseline","Container","component","maxWidth","gutterBottom","CircularProgress","flexGrow","icon","marginRight","fontSize","title","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchBar","props","AppBar","Toolbar","noWrap","InputBase","onChange","handleChange","placeholder","input","inputProps","addComma","num","toString","replace","getCoinName","val","CoinChart","state","isLoading","inputData","handleInput","e","setState","target","value","a","axios","get","exchangeResponse","exchangeData","basePrice","this","getCoinData","interval","setInterval","chartData","response","usdCoinData","status","Object","entries","premiumPrice","premiumPriceGap","DISPLAY","usdPrice","USD","PRICE","closing_price","toFixed","push","FluctateRate","FluctateRate24","filtered","filter","toLowerCase","includes","sort","b","React","Component","content","background","paper","heroButtons","Home","align","Box","paragraph","Grid","container","justify","item","Button","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50ec3310.chunk.js","sourcesContent":["/*\n * Coin Name Setting JS\n *\n */\n\nconst coinNameKR = {\n    name: {\n        BTC: '비트코인',\n        ETH: '이더리움',\n        ADA: '에이다',\n        DOGE: '도지코인',\n        XRP: '리플',\n        DOT: '폴카닷',\n        BCH: '비트코인캐시',\n        UNI: '유니스왑',\n        LTC: '라이트코인',\n        LINK: '체인링크',\n        XLM: '스텔라루멘',\n        ETC: '이더리움클래식',\n        VET: '비체인',\n        THETA: '쎄타코인',\n        TRX: '트론',\n        EOS: '이오스',\n        AAVE: '에이브',\n        MKR: '메이커',\n        KLAY: '클레이튼',\n        BSV: '비트코인에스브이',\n        XTZ: '테조스',\n        ALGO: '알고랜드',\n        CRO: '크립토닷컴체인',\n        ATOM: '코스모스',\n        LUNA: '루나',\n        BTT: '비트토렌트',\n        COMP: '컴파운드',\n        WAVES: '웨이브',\n        XEM: '넴',\n        SNX: '신세틱스',\n        YFI: '연파이낸스',\n        CHZ: '칠리즈',\n        TFUEL: '쎄타퓨엘',\n        SUSHI: '스시스왑',\n        ZIL: '질리카',\n        MANA: '디스트럴랜드',\n        BAT: '베이직어텐션토큰',\n        GRT: '더그래프',\n        BTG: '비트코인골드',\n        ENJ: '엔진코인',\n        QTUM: '퀀텀',\n        ONT: '온톨로지',\n        OMG: '오미세고',\n        UMA: '우마',\n        ZRX: '제로엑스',\n        ANKR: '앵커',\n        ICX: '아이콘',\n        BCD: '비트코인다이아몬드',\n        ORC: '오르빗체인',\n        IOST: '이오스트',\n        RLC: '아이젝',\n        LRC: '루프링',\n        ELF: '엘프',\n        KNC: '카이버',\n        GLM: '골렘',\n        WAXP: '왁스',\n        POWR: '파워렛저',\n        STRAX: '스트라티스',\n        REP: '어거',\n        CTXC: '코르텍스',\n        WTC: '월튼체인',\n        LOOM: '룸네트워크',\n        TRUE: '트루체인',\n        RNT: '원트루넷',\n        MTL: '메탈',\n        TMTG: '더마이다스터치골드',\n        STEEM: '스팀',\n        PCM: '프레시움',\n        AE: '애터니티',\n        QKC: '쿼크체인',\n        HDAC: '에이치닥',\n        AMO: '아모코인',\n        DAC: '다빈치',\n        ORBS: '오브스',\n        VALOR: '밸러토큰',\n        CON: '코넌',\n        MIX: '믹스마블',\n        LAMB: '람다',\n        FX: '펑션엑스',\n        CHR: '크로미아',\n        MBL: '무비블록',\n        MXC: '머신익스체인지코인',\n        DVP: '디브이피',\n        FCT: '피르마체인',\n        FNB: '애프앤비프로토콜',\n        TRV: '트러스트버스',\n        DAD: '다드',\n        AOA: '오로라',\n        WOM: '왐토큰',\n        SOC: '소다코인',\n        EM: '이마이너',\n        QBZ: '퀸비',\n        BOA: '보아',\n        FLETA: '플레타',\n        SXP: '스와이프',\n        COS: '콘텐토스',\n        APIX: '아픽스',\n        EL: '엘리시아',\n        BASIC: '베이직',\n        HIVE: '하이브',\n        XPR: '프로톤',\n        FIT: '300피트 네트워크',\n        EGG: '네스트리',\n        BORA: '보라',\n        ARPA: '알파체인',\n        APM: '에이피엠',\n        CKB: '너보스',\n        AERGO: '아르고',\n        ANW: '앵커뉴럴월드\u001d',\n        CENNZ: '센트럴리티',\n        EVZ: '이브이지',\n        MCI: '엠씨아이',\n        SRM: '세럼',\n        QTCON: '퀴즈톡',\n        SAND: '샌드박스',\n        CVT: '사이버베인',\n        LPT: '라이브피어',\n        LF: '링크플로우',\n        BURGER: '버거스왑'\n    },\n};\n\nexport { coinNameKR };","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport './plusminus.css';\n// <TableCell>전일비 변동가</TableCell>\n// <TableCell>{compare24H(data.FluctateRate, data.FluctateRate24)}</TableCell>\n\n//getCoinName(coinNameKR.name, data.key)\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst getCoinName = (key, val) => {\n    if (key[val]) {\n        return key[val]\n    } else {\n        return val\n    };\n};\n\nconst compare24H = (f, f24) => {\n    if (f < 0) {\n        return (\n            <div className=\"minus\">\n                {fetch}% ({f24}원)\n            </div>\n        );\n    } else if (f >= 0) {\n        return (\n            <div className=\"plus\">\n                +{f}% (+{f24}원)\n            </div>\n        );\n    }\n}\n\nconst premiumCal = (p, gap) => {\n    if (p < 0) {\n        return (<span>\n            <div className=\"minus\">\n                {p}%\n            </div>\n            <div className=\"minus\">\n                ({gap}원)\n            </div>\n        </span>\n        );\n    } else {\n        return (\n            <span>\n                <div className=\"plus\">\n                    +{p}%\n            </div>\n                <div className=\"plus\">\n                    (+{gap}원)\n            </div>\n            </span>\n        );\n    }\n}\n\nexport default function Chart({ data }) {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n\n            <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>이름</TableCell>\n                        <TableCell>현재가</TableCell>\n\n                        <TableCell>K-프리미엄</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map((data) => (\n                        <TableRow key={data.key}>\n                            <TableCell>{data.name}</TableCell>\n                            <TableCell>{data.Price}</TableCell>\n\n                            <TableCell>{premiumCal(data.premium, data.premiumGap)}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"http://localhost:3000/#/\">\n                Coin FX\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nexport default function Loading() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n                <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                    COIN FX DataBase is Loading…<CircularProgress />\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                    {'We provide optimal investment information.'}\n                </Typography><br />\n                <Typography variant=\"body2\">Hana Bank API Provide KRW/USD exchange information</Typography> <br />\n                <Typography variant=\"body2\">Bithumb API Provide Coin Quote KRW Information</Typography><br />\n                <Typography variant=\"body2\">Cryptocompare API Provide Coin Quote USD Information</Typography><br />\n            </Container>\n            <footer className={classes.footer}>\n                <Container maxWidth=\"sm\">\n                    <Typography variant=\"body1\">We provide optimal investment information.</Typography>\n                    <Copyright />\n                </Container>\n            </footer>\n        </div>\n    );\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n        fontSize: 40,\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function SearchBar(props) {\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <MonetizationOnIcon className={classes.icon} />\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        Bit Crash!\n                        <Typography variant=\"caption\" >\n                            Supporter for your investment\n                        </Typography>\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            onChange={props.handleChange}\n                            placeholder=\"Search/Sort…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport { coinNameKR } from '../components/coinName';\nimport axios from 'axios';\nimport Chart from '../components/Chart';\nimport Loading from \"./Loading\";\nimport SearchBar from '../components/Searchbar';\nimport { Container, Typography } from '@material-ui/core';\n// <Input onChange={handleInput} />\nconst addComma = (num) => {\n    const regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\n    return num.toString().replace(regexp, ',');\n};\n\nconst getCoinName = (key, val) => {\n    if (key[val]) {\n        return key[val]\n    } else {\n        return val\n    };\n};\n\nclass CoinChart extends React.Component {\n    state = {\n        isLoading: true,\n        data: [],\n        inputData: \"\"\n    };\n    async componentDidMount() {\n        /* Exchange Rate USD to KRW */\n        const exchangeResponse = await axios.get(\n            `https://quotation-api-cdn.dunamu.com/v1/forex/recent?codes=FRX.KRWUSD`\n        );\n        const exchangeData = exchangeResponse.data[0].basePrice;\n        this.getCoinData(exchangeData); // Initial get coin Data\n        this.interval = setInterval(() => {\n            this.getCoinData(exchangeData);\n        }, 5000); // Interval 5 Seconds\n    }\n\n    async getCoinData(exchangeData) {\n        const chartData = []; //  Initial chart array\n        const response = await axios.get(\n            `https://api.bithumb.com/public/ticker/all`\n        );\n        const usdCoinData = await axios.get(\n            `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,DOGE,ETH,DASH,LTC,ETC,XRP,BCH,XMR,ZEC,QTUM,BTG,EOS,ICX,VET,TRX,ELF,MITH,MCO,OMG,KNC,GNT,ZIL,ETHOS,PAY,WAX,POWR,LRC,GTO,STEEM,STRAT,ZRX,REP,AE,XEM,SNT,ADA,PPT,CTXC,CMT,THETA,WTC,ITC,TFUEL,CRO,LF,CHR,MBL,MXC,DVP,FCT,FNB,TRV,PCM,DAD,AOA,WOM,SOC,EM,QBZ,BOA,FLETA,SXP,COS,APIX,EL,BASIC,HIVE,XPR,FIT,EGG,BORA,ARPA,APM,CKB,AERGO,ANW,CENNZ,EVZ,MCI,SRM,RLC,SAND,CVT,BURGER,LPT,MKR,COMP,AAVE,YFI,UMA,UNI,QTCON,LAMB,TRUE,ABT,RNT,PLY,WAVES,LINK,ENJ,PST,SALT,RDN,LOOM,PIVX,INS,BCD,BZNT,XLM,OCN,BSV,TMTG,BAT,WET,XVG,IOST,POLY,HC,ROM,AMO,ETZ,ARN,APIS,MTL,DACC,DAC,BHP,BTT,HDAC,NPXS,AUTO,GXC,ORBS,VALOR,CON,GLM,WAXP,QKC,STRAX,ANKR,MIX&tsyms=USD`\n        );\n\n        /* If API Status Success */\n        if (response.data.status === '0000') {\n            delete response.data.data['date']; // Remove 'date' data from object\n\n            /* Create table data */\n            for (let [key, value] of Object.entries(response.data.data)) {\n                let premiumPrice, premiumPriceGap;\n                if (typeof usdCoinData.data.DISPLAY[key] === 'undefined') {\n                    // If Coin data not exists set '-'\n                    premiumPrice = premiumPriceGap = '-';\n                } else {\n                    /* Calculate USD * KRW data */\n                    let usdPrice =\n                        usdCoinData.data.DISPLAY[key].USD.PRICE.replace('$ ', '').replace(\n                            ',',\n                            ''\n                        ) * exchangeData;\n                    premiumPrice = (\n                        ((value.closing_price - usdPrice) / usdPrice) *\n                        100\n                    ).toFixed(2);\n                    premiumPriceGap = (value.closing_price - usdPrice).toFixed(2);\n                }\n\n                /* Create Final Data */\n                chartData.push({\n                    key: key,\n                    name: getCoinName(coinNameKR.name, key),\n                    Price: `${addComma(value.closing_price)}원`,\n                    FluctateRate: `${value['fluctate_rate_24H']}`,\n                    FluctateRate24: `${value['fluctate_24H']}`,\n                    premium: addComma(premiumPrice),\n                    premiumGap: addComma(premiumPriceGap),\n                });\n            }\n            /* If Server Status Success */\n            this.setState({\n                isLoading: false,\n                data: chartData,\n            });\n        };\n    }\n\n    handleInput = (e) => {\n        this.setState({\n            inputData: e.target.value,\n        });\n    };\n\n    render() {\n        const { isLoading } = this.state;\n        const { handleInput } = this;\n        const filtered = this.state.data.filter((data) => {\n            return data.name.toLowerCase().includes(this.state.inputData)\n        });\n        const sorted = this.state.data.sort(function (a, b) {\n            return b.premium - a.premium;\n        });\n\n        return (\n            <span>\n                {isLoading\n                    ? (\n                        <Loading />\n                    ) : (\n                        <span>\n                            <SearchBar handleChange={handleInput} />\n                            <Chart data={filtered} />\n                        </span>\n                    )\n                }\n            </span>\n        );\n    }\n}\n\nexport default CoinChart;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Button, Grid, CssBaseline, Typography, Toolbar, Container } from \"@material-ui/core\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n//<Grid item>\n//<Button variant=\"contained\" color=\"primary\">\n//Check the Coin FX\n//</Button>\n//</Grid>\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n        fontSize: 40,\n    },\n    content: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"relative\">\n                <Toolbar>\n                    <MonetizationOnIcon className={classes.icon} />\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        Bit Crash!\n                        <Typography variant=\"caption\" >\n                            Supporter for your investment\n                        </Typography>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <main>\n                <div className={classes.content}>\n                    <Container maxWidth=\"sm\">\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            Bit Crash!\n                        </Typography>\n                        <Box p={3}>\n                            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                                Cryptocurrency investment is no longer difficult.\n                                BitCrash starts by comparing capital gains among the world's top tier trader's country.\n                                Investment Supporters for You\n                                Bit Crash is with you.\n                            </Typography>\n                        </Box>\n                        <div className={classes.heroButtons}>\n                            <Grid container spacing={2} justify=\"center\">\n\n                                <Grid item>\n                                    <Button href='#/coinfx' variant=\"outlined\" color=\"primary\">\n                                        View whole chart\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Container>\n                </div>\n            </main>\n        </React.Fragment>\n    );\n}","import React from \"react\";\nimport CoinChart from \"./routes/coinChart\";\nimport Home from \"./routes/Home\";\nimport Loading from './routes/Loading';\nimport { HashRouter, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/coinfx\" component={CoinChart} />\n      <Route exact path=\"/loading\" component={Loading} />\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}